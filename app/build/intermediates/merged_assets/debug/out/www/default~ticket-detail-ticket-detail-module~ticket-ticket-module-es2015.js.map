{"version":3,"sources":["./node_modules/ng2-tooltip-directive/fesm2015/ng2-tooltip-directive.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoO;AACrL;;AAE/C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,iMAAiM,+BAA+B;AAChO;AACA;AACA,iBAAiB;AACjB,gCAAgC,gBAAgB,sBAAsB,WAAW,kBAAkB,kBAAkB,gBAAgB,kBAAkB,oBAAoB,aAAa,cAAc,UAAU,uBAAuB,MAAM,OAAO,mBAAmB,UAAU,qBAAqB,0CAA0C,mCAAmC,0CAA0C,qBAAqB,aAAa,kBAAkB,mBAAmB,yBAAyB,SAAS,SAAS,iBAAiB,iBAAiB,0CAA0C,4BAA4B,YAAY,SAAS,iBAAiB,iBAAiB,0CAA0C,0BAA0B,QAAQ,UAAU,gBAAgB,iBAAiB,sDAAsD,2BAA2B,QAAQ,WAAW,gBAAgB,iBAAiB,sDAAsD,2BAA2B,aAAa,oBAAoB,iCAAiC,sBAAsB,WAAW,mCAAmC,kBAAkB,WAAW,YAAY,iCAAiC,yBAAyB,iCAAiC,0CAA0C,sBAAsB,WAAW,cAAc,kBAAkB,WAAW,YAAY,gCAAgC,gBAAgB,+CAA+C,SAAS,SAAS,gBAAgB,iBAAiB,+EAA+E,sDAAsD,QAAQ,UAAU,kDAAkD,YAAY,SAAS,mBAAmB,iBAAiB,4EAA4E,yDAAyD,SAAS,WAAW,gDAAgD,QAAQ,UAAU,gBAAgB,iBAAiB,gFAAgF,uDAAuD,QAAQ,WAAW,iDAAiD,QAAQ,WAAW,gBAAgB,kBAAkB,4EAA4E,wDAAwD,SAAS,UAAU;AAC96E,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,oBAAoB,OAAO,yDAAW,wBAAwB;AAC9D,qBAAqB,OAAO,yDAAW,yBAAyB;AAChE,uBAAuB,OAAO,yDAAW,4BAA4B;AACrE,2BAA2B,OAAO,yDAAW,+BAA+B;AAC5E,sBAAsB,OAAO,yDAAW,0BAA0B;AAClE,yBAAyB,OAAO,yDAAW,8BAA8B;AACzE,8BAA8B,OAAO,yDAAW,mCAAmC;AACnF,qBAAqB,OAAO,yDAAW,iCAAiC;AACxE,uBAAuB,OAAO,yDAAW,mCAAmC;AAC5E,sBAAsB,OAAO,yDAAW,kCAAkC;AAC1E,qBAAqB,OAAO,0DAAY,wCAAwC;AAChF,YAAY,OAAO,mDAAK,EAAE;AAC1B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,kCAAkC,4DAAc;;AAEhD;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,qBAAqB,EAAE;AACvB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,qBAAqB,EAAE;AACvB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,qBAAqB,EAAE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oCAAoC,EAAE,kBAAkB,EAAE;AAC1D;AACA,+CAA+C,EAAE;AACjD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uCAAuC,2CAA2C;AAClF;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,kCAAkC,GAAG;AAC3G,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,sEAAwB,EAAE;AACtC,KAAK,OAAO,4DAAc,EAAE;AAC5B,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,eAAe,OAAO,mDAAK,sBAAsB;AACjD,oBAAoB,OAAO,mDAAK,sBAAsB;AACtD,iBAAiB,OAAO,mDAAK,wBAAwB;AACrD,qBAAqB,OAAO,mDAAK,4BAA4B;AAC7D,mBAAmB,OAAO,mDAAK,2BAA2B;AAC1D,uBAAuB,OAAO,mDAAK,gCAAgC;AACnE,4BAA4B,OAAO,mDAAK,mCAAmC;AAC3E,cAAc,OAAO,mDAAK,sBAAsB;AAChD,yBAAyB,OAAO,mDAAK,iCAAiC;AACtE,eAAe,OAAO,mDAAK,sBAAsB;AACjD,oBAAoB,OAAO,mDAAK,4BAA4B;AAC5D,eAAe,OAAO,mDAAK,sBAAsB;AACjD,qBAAqB,OAAO,mDAAK,6BAA6B;AAC9D,0BAA0B,OAAO,mDAAK,iCAAiC;AACvE,cAAc,OAAO,mDAAK,qBAAqB;AAC/C,aAAa,OAAO,mDAAK,oBAAoB;AAC7C,cAAc,OAAO,mDAAK,qBAAqB;AAC/C,aAAa,OAAO,mDAAK,oBAAoB;AAC7C,gBAAgB,OAAO,mDAAK,wBAAwB;AACpD,UAAU,OAAO,mDAAK,iBAAiB;AACvC,iBAAiB,OAAO,mDAAK,yBAAyB;AACtD,iBAAiB,OAAO,mDAAK,yBAAyB;AACtD,2BAA2B,OAAO,mDAAK,kCAAkC;AACzE,qBAAqB,OAAO,mDAAK,4BAA4B;AAC7D,gBAAgB,OAAO,mDAAK,uBAAuB;AACnD,cAAc,OAAO,oDAAM,EAAE;AAC7B,oBAAoB,OAAO,0DAAY,sBAAsB,GAAG,OAAO,0DAAY,yBAAyB;AAC5G,oBAAoB,OAAO,0DAAY,uBAAuB,GAAG,OAAO,0DAAY,yBAAyB;AAC7G,eAAe,OAAO,0DAAY,oBAAoB;AACtD;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB,4DAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE0F;;AAE1F,iD","file":"default~ticket-detail-ticket-detail-module~ticket-ticket-module-es2015.js","sourcesContent":["import { Component, ElementRef, HostListener, HostBinding, Input, EventEmitter, Renderer2, InjectionToken, Directive, ComponentFactoryResolver, ApplicationRef, Injector, Output, Inject, Optional, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass TooltipComponent {\r\n    /**\r\n     * @param {?} elementRef\r\n     * @param {?} renderer\r\n     */\r\n    constructor(elementRef, renderer) {\r\n        this.elementRef = elementRef;\r\n        this.renderer = renderer;\r\n        this._show = false;\r\n        this.events = new EventEmitter();\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    transitionEnd(event) {\r\n        if (this.show) {\r\n            this.events.emit({\r\n                type: 'shown'\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    set show(value) {\r\n        if (value) {\r\n            this.setPosition();\r\n        }\r\n        this._show = this.hostClassShow = value;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get show() {\r\n        return this._show;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get placement() {\r\n        return this.data.options.placement;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get autoPlacement() {\r\n        return this.data.options.autoPlacement;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get element() {\r\n        return this.data.element;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get elementPosition() {\r\n        return this.data.elementPosition;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get options() {\r\n        return this.data.options;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get value() {\r\n        return this.data.value;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get tooltipOffset() {\r\n        return Number(this.data.options.offset);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get isThemeLight() {\r\n        return this.options['theme'] === 'light';\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        this.setPlacementClass();\r\n        this.setCustomClass();\r\n        this.setStyles();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    setPosition() {\r\n        if (this.setHostStyle(this.placement) || !this.autoPlacement) {\r\n            this.setPlacementClass(this.placement);\r\n            return;\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            const placements = ['top', 'right', 'bottom', 'left'];\r\n            for (const placement of placements) {\r\n                if (this.setHostStyle(placement)) {\r\n                    this.setPlacementClass(placement);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?=} placement\r\n     * @return {?}\r\n     */\r\n    setPlacementClass(placement) {\r\n        this.renderer.addClass(this.elementRef.nativeElement, 'tooltip-' + placement);\r\n    }\r\n    /**\r\n     * @param {?} placement\r\n     * @return {?}\r\n     */\r\n    setHostStyle(placement) {\r\n        /** @type {?} */\r\n        const isSvg = this.element instanceof SVGElement;\r\n        /** @type {?} */\r\n        const tooltip = this.elementRef.nativeElement;\r\n        /** @type {?} */\r\n        const isCustomPosition = !this.elementPosition.right;\r\n        /** @type {?} */\r\n        let elementHeight = isSvg ? this.element.getBoundingClientRect().height : this.element.offsetHeight;\r\n        /** @type {?} */\r\n        let elementWidth = isSvg ? this.element.getBoundingClientRect().width : this.element.offsetWidth;\r\n        /** @type {?} */\r\n        const tooltipHeight = tooltip.clientHeight;\r\n        /** @type {?} */\r\n        const tooltipWidth = tooltip.clientWidth;\r\n        /** @type {?} */\r\n        const scrollY = window.pageYOffset;\r\n        if (isCustomPosition) {\r\n            elementHeight = 0;\r\n            elementWidth = 0;\r\n        }\r\n        /** @type {?} */\r\n        let topStyle;\r\n        /** @type {?} */\r\n        let leftStyle;\r\n        if (placement === 'top') {\r\n            topStyle = (this.elementPosition.top + scrollY) - (tooltipHeight + this.tooltipOffset);\r\n        }\r\n        if (placement === 'bottom') {\r\n            topStyle = (this.elementPosition.top + scrollY) + elementHeight + this.tooltipOffset;\r\n        }\r\n        if (placement === 'top' || placement === 'bottom') {\r\n            leftStyle = (this.elementPosition.left + elementWidth / 2) - tooltipWidth / 2;\r\n        }\r\n        if (placement === 'left') {\r\n            leftStyle = this.elementPosition.left - tooltipWidth - this.tooltipOffset;\r\n        }\r\n        if (placement === 'right') {\r\n            leftStyle = this.elementPosition.left + elementWidth + this.tooltipOffset;\r\n        }\r\n        if (placement === 'left' || placement === 'right') {\r\n            topStyle = (this.elementPosition.top + scrollY) + elementHeight / 2 - tooltip.clientHeight / 2;\r\n        }\r\n        /** @type {?} */\r\n        const topEdge = topStyle;\r\n        /** @type {?} */\r\n        const bottomEdge = topStyle + tooltipHeight;\r\n        /** @type {?} */\r\n        const leftEdge = leftStyle;\r\n        /** @type {?} */\r\n        const rightEdge = leftStyle + tooltipWidth;\r\n        if ((topEdge < 0 || bottomEdge > document.body.clientHeight || leftEdge < 0 || rightEdge > document.body.clientWidth) && this.autoPlacement) {\r\n            return false;\r\n        }\r\n        this.hostStyleTop = topStyle + 'px';\r\n        this.hostStyleLeft = leftStyle + 'px';\r\n        return true;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    setZIndex() {\r\n        if (this.options['zIndex'] !== 0) {\r\n            this.hostStyleZIndex = this.options['zIndex'];\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    setPointerEvents() {\r\n        if (this.options['pointerEvents']) {\r\n            this.hostStylePointerEvents = this.options['pointerEvents'];\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    setCustomClass() {\r\n        if (this.options['tooltipClass']) {\r\n            this.renderer.addClass(this.elementRef.nativeElement, this.options['tooltipClass']);\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    setAnimationDuration() {\r\n        if (Number(this.options['animationDuration']) != this.options['animationDurationDefault']) {\r\n            this.hostStyleTransition = 'opacity ' + this.options['animationDuration'] + 'ms';\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    setStyles() {\r\n        this.setZIndex();\r\n        this.setPointerEvents();\r\n        this.setAnimationDuration();\r\n        this.hostClassShadow = this.options['shadow'];\r\n        this.hostClassLight = this.isThemeLight;\r\n        this.hostStyleMaxWidth = this.options['maxWidth'] + \"px\";\r\n        this.hostStyleWidth = this.options['width'] ? this.options['width'] + \"px\" : '';\r\n    }\r\n}\r\nTooltipComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: 'tooltip',\r\n                template: \"<div *ngIf=\\\"isThemeLight\\\" class=\\\"tooltip-arrow\\\"></div>\\r\\n\\r\\n<div *ngIf=\\\"options['contentType'] === 'template' else htmlOrStringTemplate\\\" \\r\\n    [ngClass]=\\\"{'tooltip-arrow': isThemeLight }\\\">\\r\\n\\r\\n\\t<ng-container *ngTemplateOutlet=\\\"value\\\"></ng-container>\\r\\n</div>\\r\\n\\r\\n<ng-template #htmlOrStringTemplate>\\r\\n\\t<div [innerHTML]=\\\"value\\\"></div>\\r\\n</ng-template>\\r\\n\",\r\n                host: {\r\n                    'class': 'tooltip'\r\n                },\r\n                styles: [\":host{max-width:200px;background-color:#000;color:#fff;text-align:center;border-radius:6px;padding:5px 8px;position:absolute;pointer-events:none;z-index:1000;display:block;opacity:0;transition:opacity .3s;top:0;left:0}:host.tooltip-show{opacity:1}:host.tooltip-shadow{box-shadow:0 7px 15px -5px rgba(0,0,0,.4)}:host.tooltip-light.tooltip-shadow{box-shadow:0 5px 15px -5px rgba(0,0,0,.4)}:host.tooltip::after{content:\\\"\\\";position:absolute;border-style:solid}:host.tooltip-top::after{top:100%;left:50%;margin-left:-5px;border-width:5px;border-color:#000 transparent transparent}:host.tooltip-bottom::after{bottom:100%;left:50%;margin-left:-5px;border-width:5px;border-color:transparent transparent #000}:host.tooltip-left::after{top:50%;left:100%;margin-top:-5px;border-width:5px;border-color:transparent transparent transparent #000}:host.tooltip-right::after{top:50%;right:100%;margin-top:-5px;border-width:5px;border-color:transparent #000 transparent transparent}:host.tooltip-light::after{display:none}:host.tooltip-light{border:1px solid rgba(0,0,0,.06);background-color:#fff;color:#000}:host.tooltip-light .tooltip-arrow{position:absolute;width:10px;height:10px;-webkit-transform:rotate(135deg);transform:rotate(135deg);background-color:rgba(0,0,0,.07)}:host.tooltip-light .tooltip-arrow::after{background-color:#fff;content:'';display:block;position:absolute;width:10px;height:10px}:host.tooltip-top.tooltip-light{margin-top:-2px}:host.tooltip-top.tooltip-light .tooltip-arrow{top:100%;left:50%;margin-top:-4px;margin-left:-5px;background:linear-gradient(to bottom left,rgba(0,0,0,.07) 50%,transparent 50%)}:host.tooltip-top.tooltip-light .tooltip-arrow::after{top:1px;right:1px}:host.tooltip-bottom.tooltip-light .tooltip-arrow{bottom:100%;left:50%;margin-bottom:-4px;margin-left:-5px;background:linear-gradient(to top right,rgba(0,0,0,.1) 50%,transparent 50%)}:host.tooltip-bottom.tooltip-light .tooltip-arrow::after{top:-1px;right:-1px}:host.tooltip-left.tooltip-light .tooltip-arrow{top:50%;left:100%;margin-top:-5px;margin-left:-4px;background:linear-gradient(to bottom right,rgba(0,0,0,.07) 50%,transparent 50%)}:host.tooltip-left.tooltip-light .tooltip-arrow::after{top:1px;right:-1px}:host.tooltip-right.tooltip-light .tooltip-arrow{top:50%;right:100%;margin-top:-5px;margin-right:-4px;background:linear-gradient(to top left,rgba(0,0,0,.07) 50%,transparent 50%)}:host.tooltip-right.tooltip-light .tooltip-arrow::after{top:-1px;right:1px}\"]\r\n            }] }\r\n];\r\n/** @nocollapse */\r\nTooltipComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Renderer2 }\r\n];\r\nTooltipComponent.propDecorators = {\r\n    data: [{ type: Input }],\r\n    hostStyleTop: [{ type: HostBinding, args: ['style.top',] }],\r\n    hostStyleLeft: [{ type: HostBinding, args: ['style.left',] }],\r\n    hostStyleZIndex: [{ type: HostBinding, args: ['style.z-index',] }],\r\n    hostStyleTransition: [{ type: HostBinding, args: ['style.transition',] }],\r\n    hostStyleWidth: [{ type: HostBinding, args: ['style.width',] }],\r\n    hostStyleMaxWidth: [{ type: HostBinding, args: ['style.max-width',] }],\r\n    hostStylePointerEvents: [{ type: HostBinding, args: ['style.pointer-events',] }],\r\n    hostClassShow: [{ type: HostBinding, args: ['class.tooltip-show',] }],\r\n    hostClassShadow: [{ type: HostBinding, args: ['class.tooltip-shadow',] }],\r\n    hostClassLight: [{ type: HostBinding, args: ['class.tooltip-light',] }],\r\n    transitionEnd: [{ type: HostListener, args: ['transitionend', ['$event'],] }],\r\n    show: [{ type: Input }]\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * This is not a real service, but it looks like it from the outside.\r\n * It's just an InjectionToken used to import the config (initOptions) object, provided from the outside\r\n * @type {?}\r\n */\r\nconst TooltipOptionsService = new InjectionToken('TooltipOptions');\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nconst defaultOptions = {\r\n    'placement': 'top',\r\n    'autoPlacement': true,\r\n    'contentType': 'string',\r\n    'showDelay': 0,\r\n    'hideDelay': 300,\r\n    'hideDelayMobile': 0,\r\n    'hideDelayTouchscreen': 0,\r\n    'zIndex': 0,\r\n    'animationDuration': 300,\r\n    'animationDurationDefault': 300,\r\n    'trigger': 'hover',\r\n    'tooltipClass': '',\r\n    'display': true,\r\n    'displayMobile': true,\r\n    'displayTouchscreen': true,\r\n    'shadow': true,\r\n    'theme': 'dark',\r\n    'offset': 8,\r\n    'maxWidth': '',\r\n    'id': false,\r\n    'hideDelayAfterClick': 2000\r\n};\r\n/** @type {?} */\r\nconst backwardCompatibilityOptions = {\r\n    'delay': 'showDelay',\r\n    'show-delay': 'showDelay',\r\n    'hide-delay': 'hideDelay',\r\n    'hide-delay-mobile': 'hideDelayTouchscreen',\r\n    'hideDelayMobile': 'hideDelayTouchscreen',\r\n    'z-index': 'zIndex',\r\n    'animation-duration': 'animationDuration',\r\n    'animation-duration-default': 'animationDurationDefault',\r\n    'tooltip-class': 'tooltipClass',\r\n    'display-mobile': 'displayTouchscreen',\r\n    'displayMobile': 'displayTouchscreen',\r\n    'max-width': 'maxWidth'\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass TooltipDirective {\r\n    /**\r\n     * @param {?} initOptions\r\n     * @param {?} elementRef\r\n     * @param {?} componentFactoryResolver\r\n     * @param {?} appRef\r\n     * @param {?} injector\r\n     */\r\n    constructor(initOptions, elementRef, componentFactoryResolver, appRef, injector) {\r\n        this.initOptions = initOptions;\r\n        this.elementRef = elementRef;\r\n        this.componentFactoryResolver = componentFactoryResolver;\r\n        this.appRef = appRef;\r\n        this.injector = injector;\r\n        this._showDelay = 0;\r\n        this._hideDelay = 300;\r\n        this._options = {};\r\n        this.events = new EventEmitter();\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    set options(value) {\r\n        if (value && defaultOptions) {\r\n            this._options = value;\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get options() {\r\n        return this._options;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get isTooltipDestroyed() {\r\n        return this.componentRef && this.componentRef.hostView.destroyed;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get destroyDelay() {\r\n        if (this._destroyDelay) {\r\n            return this._destroyDelay;\r\n        }\r\n        else {\r\n            return Number(this.getHideDelay()) + Number(this.options['animationDuration']);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    set destroyDelay(value) {\r\n        this._destroyDelay = value;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get tooltipPosition() {\r\n        if (this.options['position']) {\r\n            return this.options['position'];\r\n        }\r\n        else {\r\n            return this.elementPosition;\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onMouseEnter() {\r\n        if (this.isDisplayOnHover == false) {\r\n            return;\r\n        }\r\n        this.show();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onMouseLeave() {\r\n        if (this.options['trigger'] === 'hover') {\r\n            this.destroyTooltip();\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onClick() {\r\n        if (this.isDisplayOnClick == false) {\r\n            return;\r\n        }\r\n        this.show();\r\n        this.hideAfterClickTimeoutId = window.setTimeout((/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            this.destroyTooltip();\r\n        }), this.options['hideDelayAfterClick']);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n    }\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    ngOnChanges(changes) {\r\n        this.initOptions = this.renameProperties(this.initOptions);\r\n        /** @type {?} */\r\n        let changedOptions = this.getProperties(changes);\r\n        changedOptions = this.renameProperties(changedOptions);\r\n        this.applyOptionsDefault(defaultOptions, changedOptions);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.destroyTooltip({\r\n            fast: true\r\n        });\r\n        if (this.componentSubscribe) {\r\n            this.componentSubscribe.unsubscribe();\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getShowDelay() {\r\n        return this.options['showDelay'];\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getHideDelay() {\r\n        /** @type {?} */\r\n        const hideDelay = this.options['hideDelay'];\r\n        /** @type {?} */\r\n        const hideDelayTouchscreen = this.options['hideDelayTouchscreen'];\r\n        return this.isTouchScreen ? hideDelayTouchscreen : hideDelay;\r\n    }\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    getProperties(changes) {\r\n        /** @type {?} */\r\n        let properties = {};\r\n        for (var prop in changes) {\r\n            if (prop !== 'options' && prop !== 'tooltipValue') {\r\n                properties[prop] = changes[prop].currentValue;\r\n            }\r\n            if (prop === 'options') {\r\n                properties = changes[prop].currentValue;\r\n            }\r\n        }\r\n        return properties;\r\n    }\r\n    /**\r\n     * @param {?} options\r\n     * @return {?}\r\n     */\r\n    renameProperties(options) {\r\n        for (var prop in options) {\r\n            if (backwardCompatibilityOptions[prop]) {\r\n                options[backwardCompatibilityOptions[prop]] = options[prop];\r\n                delete options[prop];\r\n            }\r\n        }\r\n        return options;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getElementPosition() {\r\n        this.elementPosition = this.elementRef.nativeElement.getBoundingClientRect();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    createTooltip() {\r\n        this.clearTimeouts();\r\n        this.getElementPosition();\r\n        this.createTimeoutId = window.setTimeout((/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            this.appendComponentToBody(TooltipComponent);\r\n        }), this.getShowDelay());\r\n        this.showTimeoutId = window.setTimeout((/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            this.showTooltipElem();\r\n        }), this.getShowDelay());\r\n    }\r\n    /**\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    destroyTooltip(options = {\r\n        fast: false\r\n    }) {\r\n        this.clearTimeouts();\r\n        if (this.isTooltipDestroyed == false) {\r\n            this.hideTimeoutId = window.setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                this.hideTooltip();\r\n            }), options.fast ? 0 : this.getHideDelay());\r\n            this.destroyTimeoutId = window.setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                if (!this.componentRef || this.isTooltipDestroyed) {\r\n                    return;\r\n                }\r\n                this.appRef.detachView(this.componentRef.hostView);\r\n                this.componentRef.destroy();\r\n                this.events.emit({\r\n                    type: 'hidden',\r\n                    position: this.tooltipPosition\r\n                });\r\n            }), options.fast ? 0 : this.destroyDelay);\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    showTooltipElem() {\r\n        this.clearTimeouts();\r\n        ((/** @type {?} */ (this.componentRef.instance))).show = true;\r\n        this.events.emit({\r\n            type: 'show',\r\n            position: this.tooltipPosition\r\n        });\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    hideTooltip() {\r\n        if (!this.componentRef || this.isTooltipDestroyed) {\r\n            return;\r\n        }\r\n        ((/** @type {?} */ (this.componentRef.instance))).show = false;\r\n        this.events.emit({\r\n            type: 'hide',\r\n            position: this.tooltipPosition\r\n        });\r\n    }\r\n    /**\r\n     * @param {?} component\r\n     * @param {?=} data\r\n     * @return {?}\r\n     */\r\n    appendComponentToBody(component, data = {}) {\r\n        this.componentRef = this.componentFactoryResolver\r\n            .resolveComponentFactory(component)\r\n            .create(this.injector);\r\n        ((/** @type {?} */ (this.componentRef.instance))).data = {\r\n            value: this.tooltipValue,\r\n            element: this.elementRef.nativeElement,\r\n            elementPosition: this.tooltipPosition,\r\n            options: this.options\r\n        };\r\n        this.appRef.attachView(this.componentRef.hostView);\r\n        /** @type {?} */\r\n        const domElem = (/** @type {?} */ (((/** @type {?} */ (this.componentRef.hostView))).rootNodes[0]));\r\n        document.body.appendChild(domElem);\r\n        this.componentSubscribe = ((/** @type {?} */ (this.componentRef.instance))).events.subscribe((/**\r\n         * @param {?} event\r\n         * @return {?}\r\n         */\r\n        (event) => {\r\n            this.handleEvents(event);\r\n        }));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    clearTimeouts() {\r\n        if (this.createTimeoutId) {\r\n            clearTimeout(this.createTimeoutId);\r\n        }\r\n        if (this.showTimeoutId) {\r\n            clearTimeout(this.showTimeoutId);\r\n        }\r\n        if (this.hideTimeoutId) {\r\n            clearTimeout(this.hideTimeoutId);\r\n        }\r\n        if (this.destroyTimeoutId) {\r\n            clearTimeout(this.destroyTimeoutId);\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get isDisplayOnHover() {\r\n        if (this.options['display'] == false) {\r\n            return false;\r\n        }\r\n        if (this.options['displayTouchscreen'] == false && this.isTouchScreen) {\r\n            return false;\r\n        }\r\n        if (this.options['trigger'] !== 'hover') {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get isDisplayOnClick() {\r\n        if (this.options['display'] == false) {\r\n            return false;\r\n        }\r\n        if (this.options['displayTouchscreen'] == false && this.isTouchScreen) {\r\n            return false;\r\n        }\r\n        if (this.options['trigger'] != 'click') {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get isTouchScreen() {\r\n        /** @type {?} */\r\n        var prefixes = ' -webkit- -moz- -o- -ms- '.split(' ');\r\n        /** @type {?} */\r\n        var mq = (/**\r\n         * @param {?} query\r\n         * @return {?}\r\n         */\r\n        function (query) {\r\n            return window.matchMedia(query).matches;\r\n        });\r\n        if (('ontouchstart' in window)) {\r\n            return true;\r\n        }\r\n        // include the 'heartz' as a way to have a non matching MQ to help terminate the join\r\n        // https://git.io/vznFH\r\n        /** @type {?} */\r\n        var query = ['(', prefixes.join('touch-enabled),('), 'heartz', ')'].join('');\r\n        return mq(query);\r\n    }\r\n    /**\r\n     * @param {?} defaultOptions\r\n     * @param {?} options\r\n     * @return {?}\r\n     */\r\n    applyOptionsDefault(defaultOptions$$1, options) {\r\n        this.options = Object.assign({}, defaultOptions$$1, this.initOptions || {}, options);\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    handleEvents(event) {\r\n        if (event.type === 'shown') {\r\n            this.events.emit({\r\n                type: 'shown',\r\n                position: this.tooltipPosition\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    show() {\r\n        if (!this.componentRef || this.isTooltipDestroyed) {\r\n            this.createTooltip();\r\n        }\r\n        else if (!this.isTooltipDestroyed) {\r\n            this.showTooltipElem();\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    hide() {\r\n        this.destroyTooltip();\r\n    }\r\n}\r\nTooltipDirective.decorators = [\r\n    { type: Directive, args: [{\r\n                selector: '[tooltip]'\r\n            },] }\r\n];\r\n/** @nocollapse */\r\nTooltipDirective.ctorParameters = () => [\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TooltipOptionsService,] }] },\r\n    { type: ElementRef },\r\n    { type: ComponentFactoryResolver },\r\n    { type: ApplicationRef },\r\n    { type: Injector }\r\n];\r\nTooltipDirective.propDecorators = {\r\n    options: [{ type: Input, args: ['options',] }],\r\n    tooltipValue: [{ type: Input, args: ['tooltip',] }],\r\n    placement: [{ type: Input, args: ['placement',] }],\r\n    autoPlacement: [{ type: Input, args: ['autoPlacement',] }],\r\n    contentType: [{ type: Input, args: ['content-type',] }],\r\n    hideDelayMobile: [{ type: Input, args: ['hide-delay-mobile',] }],\r\n    hideDelayTouchscreen: [{ type: Input, args: ['hideDelayTouchscreen',] }],\r\n    zIndex: [{ type: Input, args: ['z-index',] }],\r\n    animationDuration: [{ type: Input, args: ['animation-duration',] }],\r\n    trigger: [{ type: Input, args: ['trigger',] }],\r\n    tooltipClass: [{ type: Input, args: ['tooltip-class',] }],\r\n    display: [{ type: Input, args: ['display',] }],\r\n    displayMobile: [{ type: Input, args: ['display-mobile',] }],\r\n    displayTouchscreen: [{ type: Input, args: ['displayTouchscreen',] }],\r\n    shadow: [{ type: Input, args: ['shadow',] }],\r\n    theme: [{ type: Input, args: ['theme',] }],\r\n    offset: [{ type: Input, args: ['offset',] }],\r\n    width: [{ type: Input, args: ['width',] }],\r\n    maxWidth: [{ type: Input, args: ['max-width',] }],\r\n    id: [{ type: Input, args: ['id',] }],\r\n    showDelay: [{ type: Input, args: ['show-delay',] }],\r\n    hideDelay: [{ type: Input, args: ['hide-delay',] }],\r\n    hideDelayAfterClick: [{ type: Input, args: ['hideDelayAfterClick',] }],\r\n    pointerEvents: [{ type: Input, args: ['pointerEvents',] }],\r\n    position: [{ type: Input, args: ['position',] }],\r\n    events: [{ type: Output }],\r\n    onMouseEnter: [{ type: HostListener, args: ['focusin',] }, { type: HostListener, args: ['mouseenter',] }],\r\n    onMouseLeave: [{ type: HostListener, args: ['focusout',] }, { type: HostListener, args: ['mouseleave',] }],\r\n    onClick: [{ type: HostListener, args: ['click',] }]\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass TooltipModule {\r\n    /**\r\n     * @param {?} initOptions\r\n     * @return {?}\r\n     */\r\n    static forRoot(initOptions) {\r\n        return {\r\n            ngModule: TooltipModule,\r\n            providers: [\r\n                {\r\n                    provide: TooltipOptionsService,\r\n                    useValue: initOptions\r\n                }\r\n            ]\r\n        };\r\n    }\r\n}\r\nTooltipModule.decorators = [\r\n    { type: NgModule, args: [{\r\n                declarations: [\r\n                    TooltipDirective,\r\n                    TooltipComponent\r\n                ],\r\n                imports: [\r\n                    CommonModule\r\n                ],\r\n                exports: [\r\n                    TooltipDirective\r\n                ],\r\n                entryComponents: [\r\n                    TooltipComponent\r\n                ]\r\n            },] }\r\n];\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { TooltipComponent, TooltipDirective, TooltipModule, TooltipOptionsService as ɵa };\n\n//# sourceMappingURL=ng2-tooltip-directive.js.map"],"sourceRoot":""}